var irulan = angular.module('irulan', ['components', 'ngResource', 'ngSanitize', 'ngRoute'])
  .config(function($locationProvider) {
    $locationProvider.html5Mode(true).hashPrefix('!');
  })

  // An array of filter names and the "sourceTypes" they can handle.  For
  //  example:
  //    {
  //      sourceFormat: 'md',
  //      name: 'markdownRenderer'
  //    }
  .value('SourceRenderers', Array())

  // This controller controls the startup state of the application
  .controller('IrulanController', ['$scope', '$location', 'Pages', function($scope, $location, Pages) {
    console.log($scope);

    //TODO: Move this to a .value? item
    $scope.homePage = 'wiki/home';

    $scope.pages = Pages.pages;

    console.log($location.path());

    //var newpage = Pages.new();
    //$scope.pages['start'] = newpage;

    //$scope.pages['wiki/home'] = Pages.get({ name: 'wiki/home' }, function(page) {
    //  console.log(page);
    //  //$scope.pages['wikipage:home'] = page;
    //})

    // Whenever a relative link is clicked AngularJS updates the browser's
    //  address bar and broadcasts a ""$locationChangeStart" event.  We need to
    //  listen for this event so we know when to load a new page.  This event
    //  also fires on startup so we use it to load the initial page.
    $scope.$on('$locationChangeStart', function(event, next, current) {
      console.log(Pages.pages);
      var newpage = $location.path();
      newpage = newpage.replace(/^\//, "");
      if (newpage.length < 1) {
        newpage = $scope.homePage;
      }

      if(!(newpage in Pages.pages)) {
        console.log("Load page not previously loaded: " + newpage);
        Pages.pages[newpage] = Pages.get({ name: newpage }, function(page) {
          console.log(Pages.pages);
        });
      }
    });
  }]);
