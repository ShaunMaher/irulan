// This will enable all verbose messages generated by this file (remember that
//  the irulan server presents this file to the browser as the plugin name).
console.verbose.filterObjects.push("irulansysinfo.js");

irulanclient.run(['Apps', 'Cards', function(Apps, Cards) {
  this.Cards = Cards;
  Apps.push({
    name: 'irulansysinfo',
    enabled: true,
    launcher: {
      label: 'System Information',
      icon: 'some url',
      // Tooltip
      title: 'See the System information page',
      // What will happen when the user clicks the launcher button?
      click: (function() {
        console.verbose("switch to 'sysinfo' app.");

        this.Cards.show('sysinfo/');
      }).bind(this)
    },
    // Each application will have the ability to specify some colors that will
    //  be applied to the global CSS (e.g. Navbar color) so the user has a clear
    //  indication that they have move to a new app
    theme: {
      colors: {
        color_1: '#FFFFFF',
        color_2: '#000000',
      },
      // The application can also have it's own background image (wallpaper)
      background: {
        image: 'some url',
        color: '#FFFFFF',
      },
    }
  })
  console.verbose(Apps);
}]);

// Register our ability to handle page requests in the "sysinfo/" name space
irulanclient.run(['WorkspaceProviders', 'Card', 'Cards', function(WorkspaceProviders, Card, Cards) {
  // How can I push the factory?
  WorkspaceProviders.push({
    namespace: 'sysinfo/',
    factory: Card,
    workspace: Cards,
  });
}]);
